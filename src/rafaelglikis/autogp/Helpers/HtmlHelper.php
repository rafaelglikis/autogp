<?phpnamespace rafaelglikis\autogp\Helpers;use DOMDocument;class HtmlHelper{    static function fixHtml($html)    {        $html = preg_replace('#<script(.*?)>(.*?)</script>#is', '', $html);        $html = preg_replace('#<style(.*?)>(.*?)</style>#is', '', $html);        $html = strip_tags($html, '<p><strong><a><iframe><img><ul><ol><li><br><h1><h2><h3><h4>');        return $html;    }    static function extractLink($html)    {        $html = strip_tags($html, '<a>');        $url = null;        if (strpos($html, "href='") !== false)        {            $url = TextHelper::strCut($html, "href='", "'");        }        if (strpos($html, 'href="') !== false)        {            $url = TextHelper::strCut($html, 'href="', '"');        }        return $url;    }    static function extractImage($html)    {        $html = strip_tags($html, '<a><img>');        $url = TextHelper::strCut($html, 'href="', '"');        return $url;    }    static function findTitle($html)    {        $doc = new DOMDocument();        @$doc->loadHTML($html);        $nodes = $doc->getElementsByTagName('title');        $title = $nodes->item(0)->nodeValue;        return $title;    }    static function find9GagImgLink($query)    {        $search = 'http://9gag.com/search?query=' . str_replace(' ', '+', $query);        $html = HtmlHelper::takeHtml($search);        $html = TextHelper::strCut($html, 'class="post-container"');        $html = TextHelper::strCut($html, 'src="', '" alt');        $link = TextHelper::strCut($html, '', '" alt');        $link = str_replace('220x145', '700b', $link);        return $link;    }    static function getHtmlFrom($url)    {        //TODO use curl or guzzle        return file_get_contents($url);    }    static function curl($url)    {        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        $data = curl_exec($ch);        curl_close($ch);        return $data;    }    static function findMainImage($html)    {        $doc = new DOMDocument();        @$doc->loadHTML($html);        $nodes = $doc->getElementsByTagName('title');        //get and display what you need:        $metas = $doc->getElementsByTagName('meta');        $image = null;        for ($i = 0; $i < $metas->length; $i++)        {            $meta = $metas->item($i);            if ($meta->getAttribute('property') == 'og:image')            {                $image = $meta->getAttribute('content');                break;            }        }        return $image;    }    static function clearLink($url)    {        $url = str_replace('https://www', '', $url);        $url = str_replace('http://www', '', $url);        $url = str_replace('https://', '', $url);        $url = str_replace('http://', '', $url);        return $url;    }}